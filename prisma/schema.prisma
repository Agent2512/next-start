// *** DO NOT EDIT. GENERATED BY PRISMIX. ***
datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "lib/main"
}

model User {
  id            String              @id @default(cuid())
  accessPanels  AccessPanel[]       @relation(name: "AccessPanelToUser")
  name          String?
  email         String?             @unique
  image         String?
  accounts      Account[]           @relation(name: "AccountToUser")
  password      String?
  satisfactions SatisfactionState[] @relation(name: "SatisfactionStateToUser")
  trackings     trackingState[]     @relation(name: "UserTotrackingState")
}

model AccessPanel {
  id     Int              @id @default(autoincrement())
  panel  String           @unique
  url    String
  users  User[]           @relation(name: "AccessPanelToUser")
  typeId Int?
  type   AccessPanelType? @relation(name: "AccessPanelToAccessPanelType", fields: [typeId], references: [id], onDelete: SetNull)
}

model AccessPanelType {
  id           Int           @id @default(autoincrement())
  type         String        @unique
  color        String
  accessPanels AccessPanel[] @relation(name: "AccessPanelToAccessPanelType")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(name: "AccountToUser", fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Feed {
  id              Int          @id @default(autoincrement())
  siteId          Int
  webShop         String
  feedName        String
  durationProduct Int          @default(5)
  durationPrice   Int          @default(5)
  feedUpdate      FeedUpdate[] @relation(name: "FeedToFeedUpdate")

  @@unique([siteId, webShop])
}

model FeedUpdate {
  id         Int       @id @default(autoincrement())
  feedId     Int
  feed       Feed      @relation(name: "FeedToFeedUpdate", fields: [feedId], references: [id], onDelete: Cascade)
  duration   Int
  type       String
  updateDate DateTime  @default(now())
  updateDone DateTime?
}

model SatisfactionState {
  id        Int     @id
  state     String  @default("FOLLOW")
  user      User?   @relation(name: "SatisfactionStateToUser", fields: [userEmail], references: [email], onDelete: SetNull)
  userEmail String?
}

model trackingState {
  id        Int     @id
  state     String  @default("FOLLOW")
  user      User?   @relation(name: "UserTotrackingState", fields: [userEmail], references: [email], onDelete: SetNull)
  userEmail String?
}
